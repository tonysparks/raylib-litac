@raw("""
#define RAYGUI_IMPLEMENTATION
#define RAYGUI_RICONS_SUPPORT

Vector2 litaC__game__GetCursorPos();
#define GetMousePosition litaC__game__GetCursorPos
#include <raygui.h>
#undef GetMousePosition
""");

//@include("<raygui.h>");
//@include("<ricons.h>");

import "raylib";

@foreign public struct GuiTextBoxState {
    cursor: i32
    start: i32
    index: i32
    select: i32
}

@foreign public enum GuiControlState {
    GUI_STATE_NORMAL = 0,
    GUI_STATE_FOCUSED,
    GUI_STATE_PRESSED,
    GUI_STATE_DISABLED,
}

@foreign public enum GuiTextAlignment {
    GUI_TEXT_ALIGN_LEFT = 0,
    GUI_TEXT_ALIGN_CENTER,
    GUI_TEXT_ALIGN_RIGHT,
}

@foreign public enum GuiControl {
    DEFAULT = 0,
    LABEL,          // LABELBUTTON
    BUTTON,         // IMAGEBUTTON
    TOGGLE,         // TOGGLEGROUP
    SLIDER,         // SLIDERBAR
    PROGRESSBAR,
    CHECKBOX,
    COMBOBOX,
    DROPDOWNBOX,
    TEXTBOX,        // TEXTBOXMULTI
    VALUEBOX,
    SPINNER,
    LISTVIEW,
    COLORPICKER,
    SCROLLBAR,
    RESERVED
}

@foreign public enum GuiControlProperty {
    BORDER_COLOR_NORMAL = 0,
    BASE_COLOR_NORMAL,
    TEXT_COLOR_NORMAL,
    BORDER_COLOR_FOCUSED,
    BASE_COLOR_FOCUSED,
    TEXT_COLOR_FOCUSED,
    BORDER_COLOR_PRESSED,
    BASE_COLOR_PRESSED,
    TEXT_COLOR_PRESSED,
    BORDER_COLOR_DISABLED,
    BASE_COLOR_DISABLED,
    TEXT_COLOR_DISABLED,
    BORDER_WIDTH,
    INNER_PADDING,
    TEXT_ALIGNMENT,
    RESERVED02
}

@foreign public enum GuiDefaultProperty {
    TEXT_SIZE = 16,
    TEXT_SPACING,
    LINE_COLOR,
    BACKGROUND_COLOR,
}

@foreign public enum GuiToggleProperty {
    GROUP_PADDING = 16,
}

@foreign public enum GuiSliderProperty {
    SLIDER_WIDTH = 16,
    TEXT_PADDING
}

@foreign public enum GuiCheckBoxProperty {
    CHECK_TEXT_PADDING = 16
}

@foreign public enum GuiComboBoxProperty {
    SELECTOR_WIDTH = 16,
    SELECTOR_PADDING
}

@foreign public enum GuiDropdownBoxProperty {
    ARROW_RIGHT_PADDING = 16,
}

@foreign public enum GuiTextBoxProperty {
    MULTILINE_PADDING = 16,
    COLOR_SELECTED_FG,
    COLOR_SELECTED_BG
}

@foreign public enum GuiSpinnerProperty {
    SELECT_BUTTON_WIDTH = 16,
    SELECT_BUTTON_PADDING,
    SELECT_BUTTON_BORDER_WIDTH
}

@foreign public enum GuiScrollBarProperty {
    ARROWS_SIZE = 16,
    SLIDER_PADDING,
    SLIDER_SIZE,
    SCROLL_SPEED,
    ARROWS_VISIBLE
}

@foreign public enum GuiScrollBarSide {
    SCROLLBAR_LEFT_SIDE = 0,
    SCROLLBAR_RIGHT_SIDE
}

@foreign public enum GuiListViewProperty {
    ELEMENTS_HEIGHT = 16,
    ELEMENTS_PADDING,
    SCROLLBAR_WIDTH,
    SCROLLBAR_SIDE,             // This property defines vertical scrollbar side (SCROLLBAR_LEFT_SIDE or SCROLLBAR_RIGHT_SIDE)
}

@foreign public enum GuiColorPickerProperty {
    COLOR_SELECTOR_SIZE = 16,
    BAR_WIDTH,                  // Lateral bar width
    BAR_PADDING,                // Lateral bar separation from panel
    BAR_SELECTOR_HEIGHT,        // Lateral bar selector height
    BAR_SELECTOR_PADDING        // Lateral bar selector outer padding
}


@foreign public func GuiEnable() : void;
@foreign public func GuiDisable() : void;
@foreign public func GuiLock() : void;
@foreign public func GuiUnlock() : void;
@foreign public func GuiState(state: i32) : void;
@foreign public func GuiFont(font: Font) : void;
@foreign public func GuiFade(alpha: f32) : void;
@foreign public func GuiSetStyle(control: i32, property: i32, value: i32) : void;
@foreign public func GuiGetStyle(control: i32, property: i32) : i32;
@foreign public func GuiTextBoxSetActive(bounds: Rectangle) : void;
@foreign public func GuiTextBoxGetActive() : Rectangle;
@foreign public func GuiTextBoxSetCursor(cursor: i32) : void;
@foreign public func GuiTextBoxGetCursor() : i32;
@foreign public func GuiTextBoxSetSelection(start: i32, length: i32) : void;
@foreign public func GuiTextBoxGetSelection() : Vector2;
@foreign public func GuiTextBoxIsActive(bounds: Rectangle) : bool;
@foreign public func GuiTextBoxGetState() : GuiTextBoxState;
@foreign public func GuiTextBoxSetState(state: GuiTextBoxState) : void;
@foreign public func GuiTextBoxSelectAll(text: *const char) : void;
@foreign public func GuiTextBoxCopy(text: *const char) : void;
@foreign public func GuiTextBoxPaste(text: *char, textSize: i32) : void;
@foreign public func GuiTextBoxCut(text: *char) : void;
@foreign public func GuiTextBoxDelete(text: *char, length: i32, before: bool) : i32;
@foreign public func GuiTextBoxGetByteIndex(text: *const char, start: i32, from: i32, to: i32) : i32;
@foreign public func GuiWindowBox(bounds: Rectangle, text: *const char) : bool;
@foreign public func GuiGroupBox(bounds: Rectangle, text: *const char) : void;
@foreign public func GuiLine(bounds: Rectangle, text: *const char) : void;
@foreign public func GuiPanel(bounds: Rectangle) : void;
@foreign public func GuiScrollPanel(bounds: Rectangle, content: Rectangle, scroll: *Vector2) : Rectangle;
@foreign public func GuiLabel(bounds: Rectangle, text: *const char) : void;
@foreign public func GuiButton(bounds: Rectangle, text: *const char) : bool;
@foreign public func GuiLabelButton(bounds: Rectangle, text: *const char) : bool;
@foreign public func GuiImageButton(bounds: Rectangle, texture: Texture2D) : bool;
@foreign public func GuiImageButtonEx(bounds: Rectangle, texture: Texture2D, texSource: Rectangle, text: *const char) : bool;
@foreign public func GuiToggle(bounds: Rectangle, text: *const char, active: bool) : bool;
@foreign public func GuiToggleGroup(bounds: Rectangle, text: *const char, active: i32) : i32;
@foreign public func GuiCheckBox(bounds: Rectangle, text: *const char, checked: bool) : bool;
@foreign public func GuiComboBox(bounds: Rectangle, text: *const char, active: i32) : i32;
@foreign public func GuiDropdownBox(bounds: Rectangle, text: *const char, active: *i32, editMode: bool) : bool;
@foreign public func GuiSpinner(bounds: Rectangle, value: *i32, minValue: i32, maxValue: i32, editMode: bool) : bool;
@foreign public func GuiValueBox(bounds: Rectangle, value: *i32, minValue: i32, maxValue: i32, editMode: bool) : bool;
@foreign public func GuiTextBox(bounds: Rectangle, text: *char, textSize: i32, editMode: bool) : bool;
@foreign public func GuiTextBoxMulti(bounds: Rectangle, text: *char, textSize: i32, editMode: bool) : bool;
@foreign public func GuiSlider(bounds: Rectangle, text: *const char, value: f32, minValue: f32, maxValue: f32, showValue: bool) : f32;
@foreign public func GuiSliderBar(bounds: Rectangle, text: *const char, value: f32, minValue: f32, maxValue: f32, showValue: bool) : f32;
@foreign public func GuiProgressBar(bounds: Rectangle, text: *const char, value: f32, minValue: f32, maxValue: f32, showValue: bool) : f32;
@foreign public func GuiStatusBar(bounds: Rectangle, text: *const char) : void;
@foreign public func GuiDummyRec(bounds: Rectangle, text: *const char) : void;
@foreign public func GuiScrollBar(bounds: Rectangle, value: i32, minValue: i32, maxValue: i32) : i32;
@foreign public func GuiGrid(bounds: Rectangle, spacing: f32, subdivs: i32) : Vector2;
@foreign public func GuiListView(bounds: Rectangle, text: *const char, active: *i32, scrollIndex: *i32, editMode: bool) : bool;
@foreign public func GuiListViewEx(bounds: Rectangle, text: *const *char, count: i32, enabled: *i32, active: *i32, focus: *i32, scrollIndex: *i32, editMode: bool) : bool;
@foreign public func GuiMessageBox(bounds: Rectangle, windowTitle: *const char, message: *const char, buttons: *const char) : i32;
@foreign public func GuiTextInputBox(bounds: Rectangle, windowTitle: *const char, message: *const char, text: *char, buttons: *const char) : i32;
@foreign public func GuiColorPicker(bounds: Rectangle, color: Color) : Color;
@foreign public func GuiLoadStyle(fileName: *const char) : void;
@foreign public func GuiLoadStyleProps(props: *const i32, count: i32) : void;
@foreign public func GuiLoadStyleDefault() : void;
@foreign public func GuiUpdateStyleComplete() : void;
@foreign public func GuiIconText(iconId: i32, text: *const char) : *const char;



// ricons

@foreign public const RICONS_COUNT: i32;     // Number of icons included
@foreign public const RICONS_SIZE: i32;      // Size of icons (squared)

//----------------------------------------------------------------------------------
// Icons enumeration
//----------------------------------------------------------------------------------
@foreign public enum rIconDescription {
    RICON_NONE = 0,
    RICON_FOLDER_FILE_OPEN,
    RICON_FILE_SAVE_CLASSIC,
    RICON_FOLDER_OPEN,
    RICON_FOLDER_SAVE,
    RICON_FILE_OPEN,
    RICON_FILE_SAVE,
    RICON_FILE_EXPORT,
    RICON_FILE_NEW,
    RICON_FILE_DELETE,
    RICON_FILETYPE_TEXT,
    RICON_FILETYPE_AUDIO,
    RICON_FILETYPE_IMAGE,
    RICON_FILETYPE_PLAY,
    RICON_FILETYPE_VIDEO,
    RICON_FILETYPE_INFO,
    RICON_FILE_COPY,
    RICON_FILE_CUT,
    RICON_FILE_PASTE,
    RICON_CURSOR_HAND,
    RICON_CURSOR_POINTER,
    RICON_CURSOR_CLASSIC,
    RICON_PENCIL,
    RICON_PENCIL_BIG,
    RICON_BRUSH_CLASSIC,
    RICON_BRUSH_PAINTER,
    RICON_WATER_DROP,
    RICON_COLOR_PICKER,
    RICON_RUBBER,
    RICON_COLOR_BUCKET,
    RICON_TEXT_T,
    RICON_TEXT_A,
    RICON_SCALE,
    RICON_RESIZE,
    RICON_FILTER_POINT,
    RICON_FILTER_BILINEAR,
    RICON_CROP,
    RICON_CROP_ALPHA,
    RICON_SQUARE_TOGGLE,
    RICON_SIMMETRY,
    RICON_SIMMETRY_HORIZONTAL,
    RICON_SIMMETRY_VERTICAL,
    RICON_LENS,
    RICON_LENS_BIG,
    RICON_EYE_ON,
    RICON_EYE_OFF,
    RICON_FILTER_TOP,
    RICON_FILTER,
    RICON_TARGET_POINT,
    RICON_TARGET_SMALL,
    RICON_TARGET_BIG,
    RICON_TARGET_MOVE,
    RICON_CURSOR_MOVE,
    RICON_CURSOR_SCALE,
    RICON_CURSOR_SCALE_RIGHT,
    RICON_CURSOR_SCALE_LEFT,
    RICON_UNDO,
    RICON_REDO,
    RICON_REREDO,
    RICON_MUTATE,
    RICON_ROTATE,
    RICON_REPEAT,
    RICON_SHUFFLE,
    RICON_EMPTYBOX,
    RICON_TARGET,
    RICON_TARGET_SMALL_FILL,
    RICON_TARGET_BIG_FILL,
    RICON_TARGET_MOVE_FILL,
    RICON_CURSOR_MOVE_FILL,
    RICON_CURSOR_SCALE_FILL,
    RICON_CURSOR_SCALE_RIGHT_FILL,
    RICON_CURSOR_SCALE_LEFT_FILL,
    RICON_UNDO_FILL,
    RICON_REDO_FILL,
    RICON_REREDO_FILL,
    RICON_MUTATE_FILL,
    RICON_ROTATE_FILL,
    RICON_REPEAT_FILL,
    RICON_SHUFFLE_FILL,
    RICON_EMPTYBOX_SMALL,
    RICON_BOX,
    RICON_BOX_TOP,
    RICON_BOX_TOP_RIGHT,
    RICON_BOX_RIGHT,
    RICON_BOX_BOTTOM_RIGHT,
    RICON_BOX_BOTTOM,
    RICON_BOX_BOTTOM_LEFT,
    RICON_BOX_LEFT,
    RICON_BOX_TOP_LEFT,
    RICON_BOX_CENTER,
    RICON_BOX_CIRCLE_MASK,
    RICON_POT,
    RICON_ALPHA_MULTIPLY,
    RICON_ALPHA_CLEAR,
    RICON_DITHERING,
    RICON_MIPMAPS,
    RICON_BOX_GRID,
    RICON_GRID,
    RICON_BOX_CORNERS_SMALL,
    RICON_BOX_CORNERS_BIG,
    RICON_FOUR_BOXES,
    RICON_GRID_FILL,
    RICON_BOX_MULTISIZE,
    RICON_ZOOM_SMALL,
    RICON_ZOOM_MEDIUM,
    RICON_ZOOM_BIG,
    RICON_ZOOM_ALL,
    RICON_ZOOM_CENTER,
    RICON_BOX_DOTS_SMALL,
    RICON_BOX_DOTS_BIG,
    RICON_BOX_CONCENTRIC,
    RICON_BOX_GRID_BIG,
    RICON_OK_TICK,
    RICON_CROSS,
    RICON_ARROW_LEFT,
    RICON_ARROW_RIGHT,
    RICON_ARROW_BOTTOM,
    RICON_ARROW_TOP,
    RICON_ARROW_LEFT_FILL,
    RICON_ARROW_RIGHT_FILL,
    RICON_ARROW_BOTTOM_FILL,
    RICON_ARROW_TOP_FILL,
    RICON_AUDIO,
    RICON_FX,
    RICON_WAVE,
    RICON_WAVE_SINUS,
    RICON_WAVE_SQUARE,
    RICON_WAVE_TRIANGULAR,
    RICON_CROSS_SMALL,
    RICON_PLAYER_PREVIOUS,
    RICON_PLAYER_PLAY_BACK,
    RICON_PLAYER_PLAY,
    RICON_PLAYER_PAUSE,
    RICON_PLAYER_STOP,
    RICON_PLAYER_NEXT,
    RICON_PLAYER_RECORD,
    RICON_MAGNET,
    RICON_LOCK_CLOSE,
    RICON_LOCK_OPEN,
    RICON_CLOCK,
    RICON_TOOLS,
    RICON_GEAR,
    RICON_GEAR_BIG,
    RICON_BIN,
    RICON_HAND_POINTER,
    RICON_LASER,
    RICON_COIN,
    RICON_EXPLOSION,
    RICON_1UP,
    RICON_PLAYER,
    RICON_PLAYER_JUMP,
    RICON_KEY,
    RICON_DEMON,
    RICON_TEXT_POPUP,
    RICON_GEAR_EX,
    RICON_CRACK,
    RICON_CRACK_POINTS,
    RICON_STAR,
    RICON_DOOR,
    RICON_EXIT,
    RICON_MODE_2D,
    RICON_MODE_3D,
    RICON_CUBE,
    RICON_CUBE_FACE_TOP,
    RICON_CUBE_FACE_LEFT,
    RICON_CUBE_FACE_FRONT,
    RICON_CUBE_FACE_BOTTOM,
    RICON_CUBE_FACE_RIGHT,
    RICON_CUBE_FACE_BACK,
    RICON_CAMERA,
    RICON_SPECIAL,
    RICON_LINK_NET,
    RICON_LINK_BOXES,
    RICON_LINK_MULTI,
    RICON_LINK,
    RICON_LINK_BROKE,
    RICON_TEXT_NOTES,
    RICON_NOTEBOOK,
    RICON_SUITCASE,
    RICON_SUITCASE_ZIP,
    RICON_MAILBOX,
    RICON_MONITOR,
    RICON_PRINTER,
    RICON_PHOTO_CAMERA,
    RICON_PHOTO_CAMERA_FLASH,
    RICON_HOUSE,
    RICON_HEART,
    RICON_CORNER,
    RICON_VERTICAL_BARS,
    RICON_VERTICAL_BARS_FILL,
    RICON_LIFE_BARS,
    RICON_INFO,
    RICON_CROSSLINE,
    RICON_HELP,
    RICON_FILETYPE_ALPHA,
    RICON_FILETYPE_HOME,
    RICON_LAYERS_VISIBLE,
    RICON_LAYERS,
    RICON_WINDOW
};

//----------------------------------------------------------------------------------
// Module Functions Declaration
//----------------------------------------------------------------------------------
@foreign public func DrawIcon(iconId: i32, position: Vector2, pixelSize: i32, color: Color);